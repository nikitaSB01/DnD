{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://DnD/./src/js/app.js","webpack://DnD/webpack/bootstrap","webpack://DnD/webpack/runtime/compat get default export","webpack://DnD/webpack/runtime/define property getters","webpack://DnD/webpack/runtime/hasOwnProperty shorthand"],"sourcesContent":["let draggedEl = null;\nlet offsetX = 0;\nlet offsetY = 0;\nlet initialContainer = null;\nlet placeholder = null; // Элемент, который будет отображать место под сброс\nlet isDragging = false; // Флаг для отслеживания начала перетаскивания\nlet hasMoved = false; // Флаг, который будет отслеживать, переместилась ли карточка\nconst moveThreshold = 10; // Минимальное расстояние для начала перемещения\n\ndocument.addEventListener(\"mousedown\", (e) => {\n  e.preventDefault(); // Предотвращаем выделение текста и другие действия при захвате\n  let cards = document.querySelectorAll(\".card\");\n  let btnsAdd = document.querySelectorAll(\".addCardBtn\");\n  let arrBtnsCards = [...cards, ...btnsAdd];\n  arrBtnsCards.forEach((el) => {\n    el.classList.add(\"cardCardBtn\");\n  });\n\n  if (e.target.classList.contains(\"card\")) {\n    draggedEl = e.target;\n    const rect = draggedEl.getBoundingClientRect();\n\n    offsetX = e.clientX - rect.left;\n    offsetY = e.clientY - rect.top;\n\n    const computedStyle = getComputedStyle(draggedEl);\n    initialContainer = draggedEl.parentNode;\n\n    // Получаем отступы карточки\n    const marginBottom = parseInt(computedStyle.marginBottom, 10);\n    const marginTop = parseInt(computedStyle.marginTop, 10);\n\n    // Сохраняем размеры карточки с учетом отступов\n    draggedEl.style.width = computedStyle.width;\n    draggedEl.style.height = computedStyle.height;\n\n    // Делаем карточку абсолютно позиционированной\n    draggedEl.style.position = \"absolute\";\n    draggedEl.style.zIndex = \"1000\";\n\n    // Устанавливаем правильный курсор\n    document.documentElement.style.cursor = \"grabbing\";\n\n    // Создаем placeholder, который будет замещать карточку в списке\n    placeholder = document.createElement(\"div\");\n    placeholder.className = \"placeholder\";\n    placeholder.style.width = draggedEl.offsetWidth + \"px\";\n    placeholder.style.height =\n      draggedEl.offsetHeight + marginTop + marginBottom + \"px\"; // Учитываем отступы\n\n    placeholder.style.background = \"transparent\"; // Место под сброс без рамки\n\n    // Вставляем placeholder на место карточки\n    initialContainer.insertBefore(placeholder, draggedEl);\n    draggedEl.classList.add(\"dragged\");\n\n    // Прикрепляем карточку к body, чтобы она не ограничивалась контейнером\n    document.body.appendChild(draggedEl);\n\n    moveAt(e.pageX, e.pageY);\n    hasMoved = false; // Изначально считаем, что карточка не была перемещена\n  }\n});\n\nfunction moveAt(pageX, pageY) {\n  draggedEl.style.left = pageX - offsetX + \"px\";\n  draggedEl.style.top = pageY - offsetY + \"px\";\n}\n\ndocument.addEventListener(\"mousemove\", (e) => {\n  if (draggedEl) {\n    moveAt(e.pageX, e.pageY);\n    isDragging = true; // Начинаем перемещение\n\n    // Если мышь двигается более чем на moveThreshold пикселей, считаем, что произошло перемещение\n    const deltaX = Math.abs(e.clientX - offsetX);\n    const deltaY = Math.abs(e.clientY - offsetY);\n\n    if (deltaX > moveThreshold || deltaY > moveThreshold) {\n      hasMoved = true; // Перемещение действительно произошло\n    }\n\n    // Обновляем размеры placeholder в реальном времени с учетом отступов\n    const computedStyle = getComputedStyle(draggedEl);\n    const marginBottom = parseInt(computedStyle.marginBottom, 10);\n    const marginTop = parseInt(computedStyle.marginTop, 10);\n\n    placeholder.style.width = draggedEl.offsetWidth + \"px\";\n    placeholder.style.height =\n      draggedEl.offsetHeight + marginTop + marginBottom + \"px\"; // Учитываем отступы\n\n    // Пройдем по всем карточкам в колонке и вставим плейсхолдер перед той карточкой, куда будет сброшена текущая\n    const cards = Array.from(initialContainer.querySelectorAll(\".card\"));\n    let insertBeforeCard = null;\n\n    for (let i = 0; i < cards.length; i++) {\n      const card = cards[i];\n      const rect = card.getBoundingClientRect();\n      if (e.clientY < rect.top + rect.height / 2) {\n        insertBeforeCard = card;\n        break;\n      }\n    }\n\n    // Вставляем плейсхолдер перед нужной карточкой или в конец\n    if (insertBeforeCard) {\n      initialContainer.insertBefore(placeholder, insertBeforeCard);\n    } else {\n      initialContainer.appendChild(placeholder);\n    }\n\n    // Если перетаскиваем в другую колонку, перемещаем плейсхолдер\n    const columnUnder = document\n      .elementFromPoint(e.clientX, e.clientY)\n      .closest(\".column\");\n\n    if (columnUnder && columnUnder !== initialContainer) {\n      const cardContainer = columnUnder.querySelector(\".card-container\");\n      if (cardContainer && !cardContainer.contains(placeholder)) {\n        const cardsInNewColumn = Array.from(\n          cardContainer.querySelectorAll(\".card\")\n        );\n        let insertBeforeCardInNewColumn = null;\n\n        // Определяем, куда вставить placeholder в новой колонке\n        for (let i = 0; i < cardsInNewColumn.length; i++) {\n          const card = cardsInNewColumn[i];\n          const rect = card.getBoundingClientRect();\n          if (e.clientY < rect.top + rect.height / 2) {\n            insertBeforeCardInNewColumn = card;\n            break;\n          }\n        }\n\n        // Вставляем placeholder в нужное место\n        if (insertBeforeCardInNewColumn) {\n          cardContainer.insertBefore(placeholder, insertBeforeCardInNewColumn);\n        } else {\n          cardContainer.appendChild(placeholder);\n        }\n      }\n    }\n  }\n});\n\ndocument.addEventListener(\"mouseup\", (e) => {\n  let cards = document.querySelectorAll(\".card\");\n  let btnsAdd = document.querySelectorAll(\".addCardBtn\");\n  let arrBtnsCards = [...cards, ...btnsAdd];\n  arrBtnsCards.forEach((el) => {\n    el.classList.remove(\"cardCardBtn\");\n  });\n\n  if (draggedEl) {\n    if (!hasMoved) {\n      // Если перемещение не происходило, карточка остается на своем месте\n      initialContainer.insertBefore(draggedEl, placeholder);\n      if (placeholder) {\n        placeholder.parentNode.removeChild(placeholder);\n      }\n    } else {\n      // Если перемещение происходило, то размещаем карточку в новой колонке или месте\n      const columnUnder = document\n        .elementFromPoint(e.clientX, e.clientY)\n        .closest(\".column\");\n\n      const cardContainer = columnUnder\n        ? columnUnder.querySelector(\".card-container\")\n        : null;\n\n      if (cardContainer) {\n        // Вставляем карточку в контейнер в нужное место\n        cardContainer.insertBefore(draggedEl, placeholder || null);\n\n        // Убираем placeholder\n        if (placeholder) {\n          placeholder.parentNode.removeChild(placeholder);\n        }\n      } else {\n        initialContainer.insertBefore(draggedEl, placeholder); // Если карточка не сброшена, возвращаем на место\n        if (placeholder) {\n          placeholder.parentNode.removeChild(placeholder);\n        }\n      }\n    }\n\n    // Очищаем ссылку на перемещаемую карточку\n    draggedEl.classList.remove(\"dragged\");\n    draggedEl.style.position = \"\"; // Возвращаем обычную позицию карточке\n    draggedEl.style.left = \"\";\n    draggedEl.style.top = \"\";\n\n    // Устанавливаем курсор в правильное состояние после отпуска\n    if (e.target === draggedEl) {\n      document.documentElement.style.cursor = \"grab\"; // Возвращаем курсор в состояние \"grab\" на самой карточке\n    } else {\n      document.documentElement.style.cursor = \"default\"; // Возвращаем курсор в стандартное состояние, если курсор не на карточке\n    }\n\n    draggedEl = null;\n\n    // Сохраняем в LocalStorage после каждого перемещения\n    saveCardsToLocalStorage();\n  }\n});\n\n// Функция для сохранения карточек в LocalStorage с их порядком и колонками\nfunction saveCardsToLocalStorage() {\n  const columns = document.querySelectorAll(\".column\");\n  const data = Array.from(columns).map((column) => {\n    const cards = Array.from(column.querySelectorAll(\".card\"));\n    return cards.map((card) => card.textContent.trim());\n  });\n  localStorage.setItem(\"kanbanCards\", JSON.stringify(data));\n}\n\n// Функция для загрузки карточек из LocalStorage\nfunction loadCardsFromLocalStorage() {\n  const data = JSON.parse(localStorage.getItem(\"kanbanCards\"));\n  if (data) {\n    const columns = document.querySelectorAll(\".column\");\n    data.forEach((columnCards, index) => {\n      const cardContainer = columns[index].querySelector(\".card-container\");\n      columnCards.forEach((cardText) => {\n        const cardEl = document.createElement(\"div\");\n        cardEl.className = \"card\";\n        cardEl.textContent = cardText;\n\n        const deleteBtn = document.createElement(\"span\");\n        deleteBtn.innerHTML = '<i class=\"fas fa-times\"></i>';\n        deleteBtn.className = \"delete-btn\";\n        deleteBtn.onclick = (e) => {\n          const card = e.target.closest(\".card\");\n          card.parentNode.removeChild(card);\n          saveCardsToLocalStorage();\n        };\n\n        cardEl.appendChild(deleteBtn);\n        cardContainer.appendChild(cardEl);\n      });\n    });\n  }\n}\n\n// Кнопка добавления карточек\nconst addCardBtns = document.querySelectorAll(\".addCardBtn\");\n\n// Восстанавливаем сохраненные карточки\nloadCardsFromLocalStorage();\n\naddCardBtns.forEach((btn) => {\n  btn.addEventListener(\"click\", (e) => {\n    const clickedBtn = e.currentTarget;\n    const cardContainer = clickedBtn.previousElementSibling;\n\n    // Скрываем все кнопки addCardBtn\n    addCardBtns.forEach((btn) => {\n      btn.style.display = \"none\";\n    });\n\n    // Создаем новое поле ввода\n    const cardEl = document.createElement(\"div\");\n    cardEl.className = \"card\";\n\n    const input = document.createElement(\"input\");\n    input.type = \"text\";\n    input.placeholder = \"Введите текст...\";\n    input.className = \"cardInput\";\n\n    // Кнопка для добавления заметки\n    const addNoteBtn = document.createElement(\"button\");\n    addNoteBtn.textContent = \"Add\";\n    addNoteBtn.className = \"addNoteBtn\";\n\n    // Кнопка для отмены ввода\n    const cancelBtn = document.createElement(\"button\");\n    cancelBtn.textContent = \"Cancel\";\n    cancelBtn.className = \"cancelBtn\";\n\n    // Вставляем кнопки \"Add\" и \"Cancel\" в тот же контейнер, где была кнопка \"addCardBtn\"\n    const btnContainer = clickedBtn.parentElement;\n    btnContainer.appendChild(addNoteBtn);\n    btnContainer.appendChild(cancelBtn);\n\n    // При нажатии на кнопку \"Add\" сохраняем заметку\n    addNoteBtn.addEventListener(\"click\", () => {\n      const cardText = input.value.trim();\n      if (cardText) {\n        cardEl.textContent = cardText;\n        cardEl.appendChild(deleteBtn);\n        cardContainer.appendChild(cardEl);\n        saveCardsToLocalStorage(); // Сохраняем после добавления карточки\n        input.value = \"\"; // Очищаем поле ввода\n        addNoteBtn.style.display = \"none\"; // Скрываем кнопку \"Add\"\n        cancelBtn.style.display = \"none\"; // Скрываем кнопку \"Cancel\"\n        // Возвращаем все кнопки addCardBtn обратно по центру\n        addCardBtns.forEach((btn) => {\n          btn.style.display = \"block\"; // Возвращаем кнопки в исходное состояние\n          // Центрируем контейнер кнопок\n          btn.parentElement.style.textAlign = \"center\"; // Центрируем контейнер кнопок\n        });\n      }\n    });\n\n    // При нажатии на кнопку \"Cancel\" отменяем операцию ввода\n    cancelBtn.addEventListener(\"click\", () => {\n      // Скрываем поле ввода и саму карточку\n      cardEl.style.display = \"none\";\n      input.style.display = \"none\";\n      addNoteBtn.style.display = \"none\";\n      cancelBtn.style.display = \"none\";\n\n      // Восстанавливаем кнопку addCardBtn в исходное состояние\n      addCardBtns.forEach((btn) => {\n        btn.style.display = \"block\"; // Возвращаем кнопку\n        btn.parentElement.style.textAlign = \"center\"; // Центрируем контейнер кнопок\n      });\n    });\n\n    // Слушаем событие \"Enter\" для сохранения заметки\n    input.addEventListener(\"keydown\", (event) => {\n      if (event.key === \"Enter\") {\n        const cardText = input.value.trim();\n        if (cardText) {\n          cardEl.textContent = cardText;\n          cardEl.appendChild(deleteBtn);\n          cardContainer.appendChild(cardEl);\n          saveCardsToLocalStorage(); // Сохраняем после добавления карточки\n          input.value = \"\"; // Очищаем поле ввода\n          addNoteBtn.style.display = \"none\"; // Скрываем кнопку \"Add\"\n          cancelBtn.style.display = \"none\"; // Скрываем кнопку \"Cancel\"\n          // Возвращаем все кнопки addCardBtn обратно по центру\n          addCardBtns.forEach((btn) => {\n            btn.style.display = \"block\"; // Возвращаем кнопки в исходное состояние\n            // Центрируем контейнер кнопок\n            btn.parentElement.style.textAlign = \"center\"; // Центрируем контейнер кнопок\n          });\n        }\n      }\n    });\n\n    const deleteBtn = document.createElement(\"span\");\n    deleteBtn.innerHTML = '<i class=\"fas fa-times\"></i>';\n    deleteBtn.className = \"delete-btn\";\n    deleteBtn.onclick = (e) => {\n      const card = e.target.closest(\".card\");\n      card.parentNode.removeChild(card);\n      saveCardsToLocalStorage(); // Сохраняем после удаления карточки\n    };\n\n    // Добавляем поля в DOM\n    cardEl.appendChild(input);\n    cardContainer.appendChild(cardEl);\n    input.focus();\n  });\n});\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }"],"names":["draggedEl","offsetX","offsetY","initialContainer","placeholder","isDragging","hasMoved","moveAt","pageX","pageY","style","left","top","saveCardsToLocalStorage","columns","document","querySelectorAll","data","Array","from","map","column","card","textContent","trim","localStorage","setItem","JSON","stringify","addEventListener","e","preventDefault","forEach","el","classList","add","target","contains","rect","getBoundingClientRect","clientX","clientY","computedStyle","getComputedStyle","parentNode","marginBottom","parseInt","marginTop","width","height","position","zIndex","documentElement","cursor","createElement","className","offsetWidth","offsetHeight","background","insertBefore","body","appendChild","deltaX","Math","abs","deltaY","cards","insertBeforeCard","i","length","columnUnder","elementFromPoint","closest","cardContainer","querySelector","cardsInNewColumn","insertBeforeCardInNewColumn","remove","removeChild","addCardBtns","parse","getItem","columnCards","index","cardText","cardEl","deleteBtn","innerHTML","onclick","loadCardsFromLocalStorage","btn","clickedBtn","currentTarget","previousElementSibling","display","input","type","addNoteBtn","cancelBtn","btnContainer","parentElement","value","textAlign","event","key","focus","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","n","getter","__esModule","d","a","definition","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call"],"sourceRoot":""}