{"version":3,"file":"main.js","mappings":"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","sources":["webpack://DnD/./src/js/renderBoard.js","webpack://DnD/./src/js/addCard.js","webpack://DnD/./src/js/dragAndDrop.js","webpack://DnD/./src/js/app.js","webpack://DnD/./src/js/deleteCard.js"],"sourcesContent":["// renderBoard.js\nfunction renderBoard(boardData, columns, container, onDragStart, onDragOver, onDrop, deleteCard) {\n  // Создание новой версии контейнера, чтобы избежать изменения параметров\n  const newContainer = document.createElement('div');\n\n  // Создание колонок\n  columns.forEach((column, index) => {\n    const columnEl = document.createElement('div');\n    columnEl.className = 'column';\n    columnEl.setAttribute('data-column', index);\n\n    const header = document.createElement('h3');\n    header.textContent = column.title;\n    columnEl.appendChild(header);\n\n    const cardContainer = document.createElement('div');\n    cardContainer.className = 'card-container';\n\n    // Создание карточек\n    boardData[column.key].forEach((card) => {\n      const cardEl = document.createElement('div');\n      cardEl.className = 'card';\n      cardEl.textContent = card.text;\n\n      // Удаление карточки\n      const deleteBtn = document.createElement('span');\n      deleteBtn.textContent = '\\uE951'; // Символ крестика\n      deleteBtn.className = 'delete-btn';\n      deleteBtn.onclick = () => {\n        deleteCard(boardData, card.text, column.key, container, renderBoard);\n      };\n\n      cardEl.appendChild(deleteBtn);\n      cardContainer.appendChild(cardEl);\n\n      // Перетаскивание карточки\n      cardEl.draggable = true;\n      cardEl.ondragstart = (e) => onDragStart(e, cardEl, column.key);\n      cardEl.ondragover = onDragOver;\n      cardEl.ondrop = (e) => onDrop(e, column.key, boardData, container, renderBoard, deleteCard);\n    });\n\n    columnEl.appendChild(cardContainer);\n    newContainer.appendChild(columnEl);\n  });\n\n  // Очищаем контейнер и добавляем новый контент\n  while (container.firstChild) {\n    container.removeChild(container.firstChild); // Удаляем все дочерние элементы\n  }\n  container.appendChild(newContainer); // Добавляем новый контент\n}\n\nexport default renderBoard;\n","// addCard.js\nconst addCard = (boardData, columnKey, container, renderBoard) => {\n  const cardText = prompt('Enter card text:');\n  if (cardText) {\n    boardData[columnKey].push({ text: cardText });\n    localStorage.setItem('boardData', JSON.stringify(boardData));\n    renderBoard(boardData, container);\n  }\n};\n\nexport default addCard;\n","// dragAndDrop.js\nconst onDragStart = (e, cardEl, columnKey) => {\n  e.dataTransfer.setData('text/plain', JSON.stringify({ text: cardEl.textContent, columnKey }));\n};\n\nconst onDragOver = (e) => {\n  e.preventDefault();\n};\n\nconst onDrop = (e, targetColumnKey, boardData, container, renderBoard, deleteCard) => {\n  e.preventDefault();\n  const { text, columnKey } = JSON.parse(e.dataTransfer.getData('text/plain'));\n  deleteCard(boardData, text, columnKey, container, renderBoard);\n  boardData[targetColumnKey].push({ text });\n  localStorage.setItem('boardData', JSON.stringify(boardData));\n  renderBoard(boardData, container);\n};\n\nexport { onDragStart, onDragOver, onDrop };\n","// app.js\nimport renderBoard from './renderBoard';\nimport addCard from './addCard';\nimport deleteCard from './deleteCard';\nimport { onDragStart, onDragOver, onDrop } from './dragAndDrop';\n\n\nconst boardData = JSON.parse(localStorage.getItem('boardData')) || {\n  todo: [],\n  inProgress: [],\n  done: [],\n};\n\nconst columns = [\n  { title: 'To Do', key: 'todo' },\n  { title: 'In Progress', key: 'inProgress' },\n  { title: 'Done', key: 'done' },\n];\n\nconst container = document.getElementById('board');\n\n// Вызовите функцию renderBoard после загрузки данных\nrenderBoard(boardData, columns, container, onDragStart, onDragOver, onDrop, deleteCard);\n\n// Пример добавления карточки в первую колонку\ndocument.getElementById('add-card-todo').addEventListener('click', () => addCard(boardData, 'todo', container, renderBoard));\ndocument.getElementById('add-card-in-progress').addEventListener('click', () => addCard(boardData, 'inProgress', container, renderBoard));\ndocument.getElementById('add-card-done').addEventListener('click', () => addCard(boardData, 'done', container, renderBoard));\n","// deleteCard.js\nconst deleteCard = (boardData, cardText, columnKey, container, renderBoard) => {\n  // Создаем новую версию boardData\n  const newBoardData = { ...boardData };\n  newBoardData[columnKey] = newBoardData[columnKey].filter((card) => card.text !== cardText);\n\n  localStorage.setItem('boardData', JSON.stringify(newBoardData));\n  renderBoard(newBoardData, container);\n};\n\nexport default deleteCard;\n"],"names":["renderBoard","boardData","columns","container","onDragStart","onDragOver","onDrop","deleteCard","newContainer","document","createElement","forEach","column","index","columnEl","className","setAttribute","header","textContent","title","appendChild","cardContainer","key","card","cardEl","text","deleteBtn","onclick","draggable","ondragstart","e","ondragover","ondrop","firstChild","removeChild","addCard","columnKey","cardText","prompt","push","localStorage","setItem","JSON","stringify","parse","getItem","todo","inProgress","done","getElementById","dataTransfer","setData","preventDefault","targetColumnKey","getData","newBoardData","filter","addEventListener"],"sourceRoot":""}